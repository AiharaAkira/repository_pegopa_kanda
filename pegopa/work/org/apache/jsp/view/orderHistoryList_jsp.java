/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-27 02:13:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.text.*;
import bean.Order;
import bean.Account;

public final class orderHistoryList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/header_user.jsp", Long.valueOf(1687828707618L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Account");
    _jspx_imports_classes.add("bean.Order");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
ArrayList<Order> list = (ArrayList<Order>)request.getAttribute("order_list");
SimpleDateFormat sf = new SimpleDateFormat("yyyy/MM/dd");
DecimalFormat df = new DecimalFormat("###,###");
int sales_present = 0;
int sales_past = 0;
int nowmonth = 0;
int auth = 0;
Account a = (Account) session.getAttribute("accountList");
if(a == null) {
	request.getRequestDispatcher("/view/login.jsp").forward(request, response);
}else{
	auth = a.getAuthority();
	if(auth==2){
		sales_present = (int)request.getAttribute("sales_present");
		sales_past = (int)request.getAttribute("sales_past");
		nowmonth = (int)request.getAttribute("nowmonth");
	}
}



      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>注文一覧</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
if(auth==2){ 
      out.write("\r\n");
      out.write("<!-- 管理者画面 -->\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<header\r\n");
      out.write("\t\t\tstyle=\"width: 900px; display: flex; justify-content: center; align-items: center; margin: 50px auto 0 auto;\">\r\n");
      out.write("\t\t\t<img src=\"img/logo.png\" alt=\"logo\" width=\"70\" height=\"70\">\r\n");
      out.write("\t\t\t<h1 style=\"padding-top: 20px; margin-left: 12px; color: hotpink;\">\r\n");
      out.write("\t\t\t\t<span style=\"font-size: 0.8em; color: gray;\">株式会社</span>神田ユニフォーム\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t\t<table align=\"left\" style=\"padding-bottom:5px; padding-left:10%;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/menu.jsp\" style=\"text-decoration:none;\">【メニュー】</a></td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/login.jsp\" style=\"text-decoration:none;\">【ログアウト】</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<hr width=\"90%\"></hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 style=\"padding-top:20px; text-align: center;\">受注一覧</h2>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div style=\"display: flex; flex-direction: column; padding: 0 10%;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table style=\"display: flex; justify-content: right;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=8 style=\"text-align:right;\">");
      out.print(nowmonth );
      out.write("月の売り上げ(発送完了分)</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=9>￥");
      out.print(df.format(sales_present) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=8 style=\"text-align:right;\">");
      out.print(nowmonth-1 );
      out.write("月の売り上げ(発送完了分)</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=9>￥");
      out.print(df.format(sales_past) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table cellspacing=\"2\" style=\"text-align:center; padding-top:30px;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"130\">No</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"180\">氏名</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"200\">種類</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"100\">個数</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"200\">合計金額</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"200\">発注日</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"180\">入金状況</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"180\">発送状況</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"#66CC99\" width=\"180\">&nbsp;</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");

			if(list != null){
				for(int i=0;i<list.size();i++){
					Order order = (Order)list.get(i);
		
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"130\">");
      out.print(order.getId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\">");
      out.print(order.getUser_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\">");
      out.print(order.getUniform_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\">");
      out.print(order.getQuantity() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\">\\");
      out.print(df.format(order.getQuantity()*order.getPrice()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\">");
      out.print(sf.format(order.getOrderdate()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\">");
      out.print(order.getDeposit() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\">");
      out.print(order.getShipping() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/orderHistoryUpdate?cmd=1&orderid=");
      out.print(order.getId());
      out.write("\">詳細</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");
} } else{
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"130\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
}else{ 
      out.write("\r\n");
      out.write("<!-- ユーザー画面 -->\r\n");
      out.write("\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<header\r\n");
      out.write("\t\t\tstyle=\"width: 900px; display: flex; justify-content: center; align-items: center; margin: 50px auto 0 auto;\">\r\n");
      out.write("\t\t\t<img src=\"img/logo.png\" alt=\"logo\" width=\"70\" height=\"70\">\r\n");
      out.write("\t\t\t<h1 style=\"padding-top: 20px; margin-left: 12px; color: hotpink;\">\r\n");
      out.write("\t\t\t\t<span style=\"font-size: 0.8em; color: gray;\">株式会社</span>神田ユニフォーム\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table align=\"left\" style=\"padding-bottom:5px; padding-left:10%;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/menu.jsp\" style=\"text-decoration:none;\">【メニュー】</a></td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/login.jsp\" style=\"text-decoration:none;\">【ログアウト】</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t<hr size=\"8\" color=\"LightPink\" width=\"90%\"></hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 style=\"padding-top:20px; text-align: center;\">注文一覧</h2>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div style=\"display: flex; flex-direction: column; padding: 0 10%;\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table cellspacing=\"2\" style=\"text-align:center; padding-top:30px;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"LightPink\" width=\"200\">種類</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"LightPink\" width=\"100\">個数</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"LightPink\" width=\"200\">合計金額</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"LightPink\" width=\"200\">発注日</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"LightPink\" width=\"180\">入金状況</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor=\"LightPink\" width=\"180\">発送状況</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");

			if(list != null){
				for(int i=0;i<list.size();i++){
					Order order = (Order)list.get(i);
		
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\">");
      out.print(order.getUniform_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\">");
      out.print(order.getQuantity() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\">\\");
      out.print(df.format(order.getQuantity()*order.getPrice()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\">");
      out.print(sf.format(order.getOrderdate()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\">");
      out.print(order.getDeposit() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\">");
      out.print(order.getShipping() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");
} } else{
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"130\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"200\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t\t<td width=\"180\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
