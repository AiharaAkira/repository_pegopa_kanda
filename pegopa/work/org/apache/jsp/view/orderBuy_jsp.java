/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-27 04:01:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.*;
import bean.Account;
import bean.Order;

public final class orderBuy_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Account");
    _jspx_imports_classes.add("bean.Order");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
Account a = (Account) session.getAttribute("accountList");
Order order = (Order)request.getAttribute("order");
DecimalFormat df = new DecimalFormat("###,###");
int stock = 1;
if(request.getAttribute("stock")!=null) {
	stock = (int)request.getAttribute("stock");
	}
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>注文画面</title>\r\n");
      out.write("</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t\t<header\r\n");
      out.write("\t\t\tstyle=\"width: 900px; display: flex; justify-content: center; align-items: center; margin: 50px auto 0 auto;\">\r\n");
      out.write("\t\t\t<img src=\"https://postfiles.pstatic.net/MjAyMzA2MjdfMjcy/MDAxNjg3ODMxMTk3NzMx.y2U6FThvXwdOi9XToRwE2N4H_hRXqdkBoCeK2m9852Mg.qxG3IdUM9aHf2hR4frt1B7kkSVwn5eb_OthgeJAIE04g.PNG.hyh3700/logo.png?type=w773\" alt=\"logo\" width=\"70\" height=\"70\">\r\n");
      out.write("\t\t\t<h1 style=\"padding-top: 20px; margin-left: 12px; color: hotpink;\">\r\n");
      out.write("\t\t\t\t<span style=\"font-size: 0.8em; color: gray;\">株式会社</span>神田ユニフォーム\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t\t<table align=\"left\" style=\"padding-bottom:5px; padding-left:10%;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/view/menu.jsp\" style=\"text-decoration:none; color: gray; font-weight: 900;\">【メニュー】</a></td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/uniformList\" style=\"text-decoration:none; color: gray; font-weight: 900;\">【商品一覧】</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t<hr size=\"8\" color=\"LightPink\" width=\"90%\"></hr>\r\n");
      out.write("\r\n");
if(stock== 0){ 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<h3 style=\"text-align: center; color: gray;\">在庫が切れて購入できません。</h3>\r\n");
      out.write("\t<div align = \"center\">\r\n");
      out.write("\t<a style=\"display: inline-block; margin-top: 150px; border: 3px solid pink; border-radius: 8px; padding: 4px 8px; cursor: pointer; color: gray; font-weight: 900; text-decoration: none;\" href = \"view/menu.jsp\">戻る</a>\r\n");
      out.write("\t</div>\r\n");
}else if(order==null){
	if(a == null) {
      out.write("\r\n");
      out.write("\t<!-- 非会員の注文画面 -->\r\n");
      out.write("\t<div align = \"center\">\r\n");
      out.write("\t\t\t<h2  style=\"color: gray;\">注文内容</h2>\r\n");
      out.write("\t\t\t<form style=\"margin-top: 20px;\" action =\"");
      out.print(request.getContextPath());
      out.write("/orderBuy\" onsubmit=\"return call();\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cmd\" value=\"2\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(request.getAttribute("id") );
      out.write("\">\r\n");
      out.write("\t\t\t\t<table style=\"margin: 0 auto 150px auto; border-spacing: 12px;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">商品名：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(request.getAttribute("name") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">氏名：</th>\r\n");
      out.write("\t\t\t\t\t<td><input id=\"name\" style=\"width: 220px; height: 22px; border-radius: 12px; border: 3px solid pink; outline: none;\" type=\"text\" size=\"25\" name=\"user_name\"></input></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">住所：</th>\r\n");
      out.write("\t\t\t\t\t<th><input id=\"address\" style=\"width: 220px; height: 22px; border-radius: 12px; border: 3px solid pink; outline: none;\" type=text size=\"25\" name=\"address\"></input></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th style=  \"width:200px; color: gray;\">メールアドレス：</th>\r\n");
      out.write("\t\t\t\t<th><input id=\"email\" style=\"width: 220px; height: 22px; border-radius: 12px; border: 3px solid pink; outline: none;\" type=text size=\"25\" name=\"email\"></input></hd>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">個数：</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<select style=\"border-radius: 12px; border: 3px solid pink;\" name = \"quantity\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value = \"1\" selected>1\r\n");
      out.write("\t\t\t\t\t\t\t");
for(int i=2; i<=stock; i++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value = \"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td style= \"color: gray;\">(残り");
      out.print(stock );
      out.write("個)</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">備考</th>\r\n");
      out.write("\t\t\t\t\t<td><textarea name=\"content\" style=\"border-radius: 12px; border: 3px solid pink;\" cols=\"27\" rows=\"10\"></textarea></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=2 style=\"text-align: center;\"><input style=\" margin-top: 30px;  background: none; border-radius: 4px; border: 1px solid; padding: 2px 6px; border-radius: 12px; border: 3px solid pink;\" type=\"submit\" value=\"購入\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");
}else{ 
      out.write("\r\n");
      out.write("\t<!-- 会員の注文画面 -->\r\n");
      out.write("\t<div align = \"center\">\r\n");
      out.write("\t\t\t<h2  style=\"color: gray;\">注文内容</h2>\r\n");
      out.write("\t\t\t<form style=\"margin-top: 20px;\" action =\"");
      out.print(request.getContextPath());
      out.write("/orderBuy\" onsubmit=\"return call();\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cmd\" value=\"2\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(request.getAttribute("id") );
      out.write("\">\r\n");
      out.write("\t\t\t\t<table style=\"margin: 0 auto 150px auto; border-spacing: 12px;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">商品名：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(request.getAttribute("name") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">氏名：</th>\r\n");
      out.write("\t\t\t\t\t<td><input id=\"name\" value=\"");
      out.print(a.getName() );
      out.write("\" style=\"width: 220px; height: 22px; border-radius: 12px; border: 3px solid pink; outline: none;\" type=\"text\" size=\"25\" name=\"user_name\"></input></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">住所：</th>\r\n");
      out.write("\t\t\t\t\t<th><input id=\"address\" value=\"");
      out.print(a.getAddress() );
      out.write("\" style=\"width: 220px; height: 22px; border-radius: 12px; border: 3px solid pink; outline: none;\" type=text size=\"25\" name=\"address\"></input></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th style=  \"width:200px; color: gray;\">メールアドレス：</th>\r\n");
      out.write("\t\t\t\t<th><input id=\"email\" value=\"");
      out.print(a.getEmail() );
      out.write("\" style=\"width: 220px; height: 22px; border-radius: 12px; border: 3px solid pink; outline: none;\" type=text size=\"25\" name=\"email\"></input></hd>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">個数：</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<select style=\"border-radius: 12px; border: 3px solid pink;\" name = \"quantity\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value = \"1\" selected>1\r\n");
      out.write("\t\t\t\t\t\t\t");
for(int i=2; i<=stock; i++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value = \"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td style= \"color: gray;\">(残り");
      out.print(stock );
      out.write("個)</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">備考</th>\r\n");
      out.write("\t\t\t\t\t<td><textarea name=\"content\" style=\"border-radius: 12px; border: 3px solid pink;\" cols=\"27\" rows=\"10\"></textarea></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=2 style=\"text-align: center;\"><input style=\" margin-top: 30px;  background: none; border-radius: 4px; border: 1px solid; padding: 2px 6px; border-radius: 12px; border: 3px solid pink;\" type=\"submit\" value=\"購入\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
}}else{ 
      out.write("\r\n");
      out.write("\t<!-- 注文内容確認画面 -->\r\n");
      out.write("\t\t<div align = \"center\">\r\n");
      out.write("\t\t\t<h2  style=\"color: gray;\">注文内容確認</h2>\r\n");
      out.write("\t\t\t<h3 style=\"text-align: center; color: gray;\">以下の注文内容を確認してください。</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form style=\"margin-top: 20px;\" action =\"");
      out.print(request.getContextPath());
      out.write("/orderBuy\" onsubmit=\"return confirm();\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cmd\" value=\"3\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(request.getAttribute("id") );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"name\" value=\"");
      out.print(order.getUniform_name() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"user_name\" value=\"");
      out.print(order.getUser_name() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"address\" value=\"");
      out.print(order.getAddress() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"email\" value=\"");
      out.print(order.getEmail() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"quantity\" value=\"");
      out.print(order.getQuantity() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"content\" value=\"");
      out.print(order.getContent() );
      out.write("\">\r\n");
      out.write("\t\t\t\t<table style=\"margin: 0 auto 150px auto; border-spacing: 12px;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">商品名：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order.getUniform_name());
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">氏名：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order.getUser_name());
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">住所：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order.getAddress());
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style=  \"width:200px; color: gray;\">メールアドレス：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order.getEmail());
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">個数：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order.getQuantity() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style= \"width:200px; color: gray;\">備考：</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order.getContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\"><h3 style=\"text-align: center; color: gray;\">総計価格は");
      out.print(df.format(order.getQuantity()*order.getPrice()) );
      out.write("円になります。</h3></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=2 style=\"text-align: center;\"><input style=\" margin-top: 30px;  background: none; border-radius: 4px; border: 1px solid; padding: 2px 6px; border-radius: 12px; border: 3px solid pink;\" type=\"submit\" value=\"確認して購入\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\tfunction isEmpty(input) {\r\n");
      out.write("\r\n");
      out.write("\t\treturn !input.value; //값이 없어서 거짓.\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//<input>을 넣어서\r\n");
      out.write("\t// 숫자가 아니면 true, 숫자면 false\r\n");
      out.write("\tfunction isNotNumber(input) {\r\n");
      out.write("\t\treturn isNaN(input.value);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// 숫자 체크\r\n");
      out.write("\tfunction checkNum(str) {\r\n");
      out.write("\t\tconst regExp = /[0-9]/g;\r\n");
      out.write("\t\tif (regExp.test(str)) {\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 공백(스페이스 바) 체크\r\n");
      out.write("\tfunction checkSpace(str) {\r\n");
      out.write("\t\tif (str.search(/\\s/) !== -1) {\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t\t// 스페이스가 있는 경우\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn false; // 스페이스 없는 경우\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tlet name = document.getElementById('name');\r\n");
      out.write("\tlet address = document.getElementById('address');\r\n");
      out.write("\tlet email = document.getElementById('email');\r\n");
      out.write("\r\n");
      out.write("\tfunction call() {\r\n");
      out.write("\r\n");
      out.write("\t\tif (isEmpty(name)) {\r\n");
      out.write("\t\t\talert(\"氏名を入力してください。\");\r\n");
      out.write("\t\t\tname.value = \"\";\r\n");
      out.write("\t\t\tname.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (isEmpty(address)) {\r\n");
      out.write("\t\t\talert(\"住所を入力してください。\");\r\n");
      out.write("\t\t\taddress.value = \"\";\r\n");
      out.write("\t\t\taddress.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (isEmpty(email)) {\r\n");
      out.write("\t\t\talert(\"メールアドレスを入力してください。\");\r\n");
      out.write("\t\t\temail.value = \"\";\r\n");
      out.write("\t\t\temail.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (cnt == 1) {\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction confirm(){\r\n");
      out.write("\t\talert(\"購入しますか？\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
