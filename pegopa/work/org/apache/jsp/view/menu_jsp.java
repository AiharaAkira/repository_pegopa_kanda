/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-26 01:42:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Account;
import bean.Account;
import bean.Account;

public final class menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/view/userInfo.jsp", Long.valueOf(1687740716616L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Account");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
Account a = (Account) session.getAttribute("accountList");
if(a == null) request.getRequestDispatcher("/view/login.jsp").forward(request, response);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>管理者メニュー</title>\r\n");
      out.write("\r\n");

		if (a.getAuthority() == 2) {
	
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("a:hover {\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
}else{
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("a:hover {\r\n");
      out.write("\topacity: 0.8;\r\n");
      out.write("\tbackground-color: LightPink;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
}
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");

		if (a.getAuthority() == 2) {
	
      out.write("\r\n");
      out.write("\t<!-- 管理者画面 -->\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t\t<header style=\" width:900px; display: flex; justify-content: center; align-items: center; margin: 0 auto;\">\r\n");
      out.write("\t\t\t\t<img src=\"img/logo.png\" alt=\"logo\" width=\"70\" height=\"70\">\r\n");
      out.write("\t\t\t\t<h1 style=\"padding-top:20px; margin-left: 12px;\">株式会社神田ユニフォーム</h1>\r\n");
      out.write("\t\t\t\t<h1 style=\"padding-top:20px;\"></h1>\r\n");
      out.write("\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//セッションからユーザー情報を取得
	Account user = (Account) session.getAttribute("accountList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>書籍管理システム</title>\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/view/css/userInfo.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".heading-035 {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    gap: 0 7px;\r\n");
      out.write("    color: #333333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".heading-035::before {\r\n");
      out.write("    width: 20px;\r\n");
      out.write("    height: 20px;\r\n");
      out.write("    background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xml%3Aspace%3D%22preserve%22%20style%3D%22enable-background%3Anew%200%200%2024%2024%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22%23ffb500%22%3E%3Cpath%20d%3D%22M19.8%2019.2H4.2c-.3%200-.6.3-.6.6V21c0%20.3.3.6.6.6h15.6c.3%200%20.6-.3.6-.6v-1.2c0-.3-.3-.6-.6-.6zm2.4-12c-1%200-1.8.8-1.8%201.8%200%20.3.1.5.2.7l-2.7%201.6c-.6.3-1.3.1-1.7-.4l-3.1-5.3c.4-.3.7-.8.7-1.4%200-1-.8-1.8-1.8-1.8s-1.8.8-1.8%201.8c0%20.6.3%201.1.7%201.4l-3.1%205.3c-.3.6-1.1.8-1.7.4L3.4%209.7c.1-.2.2-.4.2-.7%200-1-.8-1.8-1.8-1.8S0%208%200%209s.8%201.8%201.8%201.8h.3L4.8%2018h14.4l2.7-7.2h.3c1%200%201.8-.8%201.8-1.8s-.8-1.8-1.8-1.8z%22%2F%3E%3C%2Fsvg%3E');\r\n");
      out.write("    content: '';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#u_div{\r\n");
      out.write("float: right;\r\n");
      out.write("margin-right: 10%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"u_div\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<h4 class=\"heading-035\">");
      out.print(user.getName() );
      out.write("</h4>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t\t<hr width=\"90%\"></hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- コンテンツ（メニュー部分） -->\r\n");
      out.write("\t\t\t<table style=\"padding-top:30px; border-spacing: 32px;\">\r\n");
      out.write("\t\t\t\t<tr><td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/uniformList\" style=\"text-decoration:none; border: 1px solid black; border-radius: 3px; padding: 4px 120px\">【商品一覧】</a></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/orderHistory\" style=\"text-decoration:none; border: 1px solid black; border-radius: 3px; padding: 4px 120px\">【受注一覧】</a></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/view/uniformInsert.jsp\" style=\"text-decoration:none; border: 1px solid black; border-radius: 3px; padding: 4px 120px\">【商品登録】</a></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/logout\" style=\"text-decoration:none; border: 1px solid black; border-radius: 3px; padding: 4px 112px\">【ログアウト】</a></td></tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t");

		} else {
	
      out.write("\r\n");
      out.write("\t<!-- ユーザー画面 -->\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\r\n");
      out.write("\t\t<header\r\n");
      out.write("\t\t\tstyle=\"width: 900px; display: flex; justify-content: center; align-items: center; margin: 50px auto 0 auto;\">\r\n");
      out.write("\t\t\t<img src=\"img/logo.png\" alt=\"logo\" width=\"70\" height=\"70\">\r\n");
      out.write("\t\t\t<h1 style=\"padding-top: 20px; margin-left: 12px; color: hotpink;\">\r\n");
      out.write("\t\t\t\t<span style=\"font-size: 0.8em; color: gray;\">株式会社</span>神田ユニフォーム\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//セッションからユーザー情報を取得
	Account user = (Account) session.getAttribute("accountList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>書籍管理システム</title>\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/view/css/userInfo.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".heading-035 {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    gap: 0 7px;\r\n");
      out.write("    color: #333333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".heading-035::before {\r\n");
      out.write("    width: 20px;\r\n");
      out.write("    height: 20px;\r\n");
      out.write("    background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xml%3Aspace%3D%22preserve%22%20style%3D%22enable-background%3Anew%200%200%2024%2024%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22%23ffb500%22%3E%3Cpath%20d%3D%22M19.8%2019.2H4.2c-.3%200-.6.3-.6.6V21c0%20.3.3.6.6.6h15.6c.3%200%20.6-.3.6-.6v-1.2c0-.3-.3-.6-.6-.6zm2.4-12c-1%200-1.8.8-1.8%201.8%200%20.3.1.5.2.7l-2.7%201.6c-.6.3-1.3.1-1.7-.4l-3.1-5.3c.4-.3.7-.8.7-1.4%200-1-.8-1.8-1.8-1.8s-1.8.8-1.8%201.8c0%20.6.3%201.1.7%201.4l-3.1%205.3c-.3.6-1.1.8-1.7.4L3.4%209.7c.1-.2.2-.4.2-.7%200-1-.8-1.8-1.8-1.8S0%208%200%209s.8%201.8%201.8%201.8h.3L4.8%2018h14.4l2.7-7.2h.3c1%200%201.8-.8%201.8-1.8s-.8-1.8-1.8-1.8z%22%2F%3E%3C%2Fsvg%3E');\r\n");
      out.write("    content: '';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#u_div{\r\n");
      out.write("float: right;\r\n");
      out.write("margin-right: 10%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"u_div\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<h4 class=\"heading-035\">");
      out.print(user.getName() );
      out.write("</h4>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t<hr size=\"8\" color=\"LightPink\" width=\"90%\"></hr>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- コンテンツ（メニュー部分） -->\r\n");
      out.write("\t\t<table style=\"padding-top: 30px; border-spacing: 32px;\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/uniformList\"\"\r\n");
      out.write("\t\t\t\t\tstyle=\"text-decoration: none; border: 3px solid Pink; border-radius: 8px; padding: 4px 120px; color: gray; font-weight: 900;\">【商品一覧】</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/orderHistory\"\r\n");
      out.write("\t\t\t\t\tstyle=\"text-decoration: none; border: 3px solid Pink; border-radius: 8px; padding: 4px 120px; color: gray; font-weight: 900;\">【注文一覧】</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/accountUpdate\"\r\n");
      out.write("\t\t\t\t\tstyle=\"text-decoration: none; border: 3px solid Pink; border-radius: 8px; padding: 4px 104px; color: gray; font-weight: 900;\">【会員情報変更】</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/logout\"\r\n");
      out.write("\t\t\t\t\tstyle=\"text-decoration: none; border: 3px solid Pink; border-radius: 8px; padding: 4px 112px; color: gray; font-weight: 900;\">【ログアウト】</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
